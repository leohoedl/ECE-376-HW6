

HI-TECH Software PRO Macro Assembler (PIC18) V9.63PL3 build 4692 
                                                       Thu Feb 27 17:45:28 2020

HI-TECH Software Omniscient Code Generator build 4692
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 80
     4                           	opt	pm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	text1,global,reloc=2,class=CODE,delta=1
     7                           	psect	text2,global,reloc=2,class=CODE,delta=1
     8                           	psect	text3,global,reloc=2,class=CODE,delta=1
     9                           	psect	text4,global,reloc=2,class=CODE,delta=1
    10                           	psect	text5,global,reloc=2,class=CODE,delta=1
    11                           	psect	text6,global,reloc=2,class=CODE,delta=1
    12                           	psect	text7,global,reloc=2,class=CODE,delta=1
    13                           	psect	text8,global,reloc=2,class=CODE,delta=1
    14                           	psect	text9,global,reloc=2,class=CODE,delta=1
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONS
      +                          T,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=
      +                          1
    18                           	psect	pa_nodes,global,reloc=2,class=CODE,delta=
      +                          1
    19                           	dabs	1,0x0,1
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101  000000                     
   102  000000                     
   103  000000                     
   104  000000                     
   105  000000                     
   106  000000                     
   107  000000                     
   108  000000                     
   109  000000                     
   110  000000                     
   111  000000                     
   112  000000                     
   113  000000                     
   114  000000                     
   115  000000                     
   116  000000                     
   117  000000                     
   118  000000                     
   119  000000                     
   120  000000                     
   121  000000                     
   122  000000                     
   123  000000                     
   124  000000                     
   125  000000                     
   126  000000                     
   127  000000                     
   128  000000                     
   129  000000                     
   130  000000                     
   131  000000                     
   132  000000                     
   133  000000                     
   134  000000                     
   135  000000                     
   136  000000                     
   137  000000                     
   138  000000                     
   139  000000                     
   140  000000                     
   141  000000                     
   142                           
   143                           	psect	text0
   144                           ;Data sizes: Strings 0, constant 20, data 0, bss
      +                           0, persistent 0 stack 37
   145  000000                     
   146                           ;NeoPixel0.c: 67: void main(void)
   147                           ;NeoPixel0.c: 68: {
   148  001016                     _main:
   149                           	opt stack 31
   150                           ; BSR set to: ?
   151  001016  6A92               	clrf	3986,c	;volatile
   152                           ;NeoPixel0.c: 73: TRISB = 0xFF;
   153  001018  6893               	setf	3987,c	;volatile
   154                           ;NeoPixel0.c: 74: TRISC = 0;
   155  00101A  6A94               	clrf	3988,c	;volatile
   156                           ;NeoPixel0.c: 75: TRISD = 0;
   157  00101C  6A95               	clrf	3989,c	;volatile
   158                           ;NeoPixel0.c: 76: TRISE = 0;
   159  00101E  6A96               	clrf	3990,c	;volatile
   160                           ;NeoPixel0.c: 77: TRISA = 0;
   161  001020  6A92               	clrf	3986,c	;volatile
   162                           ;NeoPixel0.c: 78: PORTB = 0;
   163  001022  6A81               	clrf	3969,c	;volatile
   164                           ;NeoPixel0.c: 79: PORTC = 0;
   165  001024  6A82               	clrf	3970,c	;volatile
   166                           ;NeoPixel0.c: 80: PORTD = 0;
   167  001026  6A83               	clrf	3971,c	;volatile
   168                           ;NeoPixel0.c: 81: PORTE = 0;
   169  001028  6A84               	clrf	3972,c	;volatile
   170                           ;NeoPixel0.c: 82: ADCON1 = 0x0F;
   171  00102A  0E0F               	movlw	15
   172  00102C  6EC1               	movwf	4033,c
   173                           ;NeoPixel0.c: 84: LCD_Init();
   174  00102E  EC65  F009         	call	_LCD_Init	;wreg free
   175                           ;NeoPixel0.c: 85: TRISD0 = 0;
   176  001032  9095               	bcf	3989,0,c	;volatile
   177                           ;NeoPixel0.c: 87: LCD_Move(0,0); for (i=0; i<20;
      +                           i++) LCD_Write(MSG0[i]);
   178  001034  0E00               	movlw	0
   179  001036  6A20               	clrf	?_LCD_Move,c
   180  001038  EC48  F009         	call	_LCD_Move
   181  00103C  6A01               	clrf	??_main,c
   182  00103E  6A02               	clrf	??_main+1,c
   183  001040                     l149:
   184                           ; BSR set to: ?
   185  001040  5001               	movf	??_main,w,c
   186  001042  0F01               	addlw	low _MSG0
   187  001044  6E1F               	movwf	(??_main+30)& (0+255),c
   188  001046  C01F  FFF6         	movff	??_main+30,tblptrl
   189  00104A  0E10               	movlw	high __Lsmallconst
   190  00104C  6EF7               	movwf	tblptrh,c
   191  00104E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   192  001050  6EF8               	movwf	tblptru,c
   193  001052  0008               	tblrd		*
   194  001054  50F5               	movf	tablat,w,c
   195  001056  ECD9  F009         	call	_LCD_Write
   196  00105A  4A01               	infsnz	??_main,f,c
   197  00105C  2A02               	incf	??_main+1,f,c
   198  00105E  0E14               	movlw	20
   199  001060  5C01               	subwf	??_main,w,c
   200  001062  0E00               	movlw	0
   201  001064  5802               	subwfb	??_main+1,w,c
   202  001066  E3EC               	bnc	l149
   203                           ; BSR set to: ?
   204                           ;NeoPixel0.c: 88: Wait_ms(100);
   205  001068  0E64               	movlw	100
   206  00106A  6E22               	movwf	?_Wait_ms,c
   207  00106C  0E00               	movlw	0
   208  00106E  6A23               	clrf	?_Wait_ms+1,c
   209  001070  ECB1  F009         	call	_Wait_ms	;wreg free
   210                           ;NeoPixel0.c: 90: N = 0;
   211  001074                     l153:
   212                           ; BSR set to: ?
   213                           ;NeoPixel0.c: 94: if(RB0==1){
   214  001074  A081               	btfss	3969,0,c	;volatile
   215  001076  D021               	goto	l155
   216                           ;NeoPixel0.c: 95: for(int i=0;i<1;i++){
   217  001078  6A03               	clrf	??_main+2,c
   218  00107A  6A04               	clrf	??_main+3,c
   219  00107C                     l156:
   220                           ; BSR set to: ?
   221                           ;NeoPixel0.c: 96: NeoPixel_Display(255,255,255);
   222  00107C  0EFF               	movlw	255
   223  00107E  6821               	setf	?_NeoPixel_Display+1,c
   224  001080  6820               	setf	?_NeoPixel_Display,c
   225  001082  EC7F  F009         	call	_NeoPixel_Display
   226  001086  4A03               	infsnz	??_main+2,f,c
   227  001088  2A04               	incf	??_main+3,f,c
   228  00108A  5004               	movf	??_main+3,w,c
   229  00108C  0A80               	xorlw	128
   230  00108E  0F80               	addlw	-128
   231  001090  0E01               	movlw	1
   232  001092  B4D8               	btfsc	status,2,c
   233  001094  5C03               	subwf	??_main+2,w,c
   234  001096  E3F2               	bnc	l156
   235                           ; BSR set to: ?
   236                           ;NeoPixel0.c: 97: }
   237                           ;NeoPixel0.c: 98: for(int i=1;i<8;i++){
   238  001098  0E01               	movlw	1
   239  00109A  6E05               	movwf	??_main+4,c
   240  00109C  6A06               	clrf	??_main+5,c
   241  00109E                     l159:
   242                           ; BSR set to: ?
   243                           ;NeoPixel0.c: 99: NeoPixel_Display(0,0,0);
   244  00109E  0E00               	movlw	0
   245  0010A0  6A21               	clrf	?_NeoPixel_Display+1,c
   246  0010A2  6A20               	clrf	?_NeoPixel_Display,c
   247  0010A4  EC7F  F009         	call	_NeoPixel_Display
   248  0010A8  4A05               	infsnz	??_main+4,f,c
   249  0010AA  2A06               	incf	??_main+5,f,c
   250  0010AC  5006               	movf	??_main+5,w,c
   251  0010AE  0A80               	xorlw	128
   252  0010B0  0F80               	addlw	-128
   253  0010B2  0E08               	movlw	8
   254  0010B4  B4D8               	btfsc	status,2,c
   255  0010B6  5C05               	subwf	??_main+4,w,c
   256  0010B8  E3F2               	bnc	l159
   257                           ; BSR set to: ?
   258  0010BA                     l155:
   259                           ; BSR set to: ?
   260                           ;NeoPixel0.c: 100: }
   261                           ;NeoPixel0.c: 101: }
   262                           ;NeoPixel0.c: 102: if(RB1==1){
   263  0010BA  A281               	btfss	3969,1,c	;volatile
   264  0010BC  D021               	goto	l162
   265                           ;NeoPixel0.c: 103: for(int i=0;i<2;i++){
   266  0010BE  6A07               	clrf	??_main+6,c
   267  0010C0  6A08               	clrf	??_main+7,c
   268  0010C2                     l163:
   269                           ; BSR set to: ?
   270                           ;NeoPixel0.c: 104: NeoPixel_Display(255,255,255)
      +                          ;
   271  0010C2  0EFF               	movlw	255
   272  0010C4  6821               	setf	?_NeoPixel_Display+1,c
   273  0010C6  6820               	setf	?_NeoPixel_Display,c
   274  0010C8  EC7F  F009         	call	_NeoPixel_Display
   275  0010CC  4A07               	infsnz	??_main+6,f,c
   276  0010CE  2A08               	incf	??_main+7,f,c
   277  0010D0  5008               	movf	??_main+7,w,c
   278  0010D2  0A80               	xorlw	128
   279  0010D4  0F80               	addlw	-128
   280  0010D6  0E02               	movlw	2
   281  0010D8  B4D8               	btfsc	status,2,c
   282  0010DA  5C07               	subwf	??_main+6,w,c
   283  0010DC  E3F2               	bnc	l163
   284                           ; BSR set to: ?
   285                           ;NeoPixel0.c: 105: }
   286                           ;NeoPixel0.c: 106: for(int i=2;i<8;i++){
   287  0010DE  0E02               	movlw	2
   288  0010E0  6E09               	movwf	??_main+8,c
   289  0010E2  6A0A               	clrf	??_main+9,c
   290  0010E4                     l166:
   291                           ; BSR set to: ?
   292                           ;NeoPixel0.c: 107: NeoPixel_Display(0,0,0);
   293  0010E4  0E00               	movlw	0
   294  0010E6  6A21               	clrf	?_NeoPixel_Display+1,c
   295  0010E8  6A20               	clrf	?_NeoPixel_Display,c
   296  0010EA  EC7F  F009         	call	_NeoPixel_Display
   297  0010EE  4A09               	infsnz	??_main+8,f,c
   298  0010F0  2A0A               	incf	??_main+9,f,c
   299  0010F2  500A               	movf	??_main+9,w,c
   300  0010F4  0A80               	xorlw	128
   301  0010F6  0F80               	addlw	-128
   302  0010F8  0E08               	movlw	8
   303  0010FA  B4D8               	btfsc	status,2,c
   304  0010FC  5C09               	subwf	??_main+8,w,c
   305  0010FE  E3F2               	bnc	l166
   306                           ; BSR set to: ?
   307  001100                     l162:
   308                           ; BSR set to: ?
   309                           ;NeoPixel0.c: 108: }
   310                           ;NeoPixel0.c: 109: }
   311                           ;NeoPixel0.c: 110: if(RB2==1){
   312  001100  A481               	btfss	3969,2,c	;volatile
   313  001102  D021               	goto	l169
   314                           ;NeoPixel0.c: 111: for(int i=0;i<3;i++){
   315  001104  6A0B               	clrf	??_main+10,c
   316  001106  6A0C               	clrf	??_main+11,c
   317  001108                     l170:
   318                           ; BSR set to: ?
   319                           ;NeoPixel0.c: 112: NeoPixel_Display(255,255,255)
      +                          ;
   320  001108  0EFF               	movlw	255
   321  00110A  6821               	setf	?_NeoPixel_Display+1,c
   322  00110C  6820               	setf	?_NeoPixel_Display,c
   323  00110E  EC7F  F009         	call	_NeoPixel_Display
   324  001112  4A0B               	infsnz	??_main+10,f,c
   325  001114  2A0C               	incf	??_main+11,f,c
   326  001116  500C               	movf	??_main+11,w,c
   327  001118  0A80               	xorlw	128
   328  00111A  0F80               	addlw	-128
   329  00111C  0E03               	movlw	3
   330  00111E  B4D8               	btfsc	status,2,c
   331  001120  5C0B               	subwf	??_main+10,w,c
   332  001122  E3F2               	bnc	l170
   333                           ; BSR set to: ?
   334                           ;NeoPixel0.c: 113: }
   335                           ;NeoPixel0.c: 114: for(int i=3;i<8;i++){
   336  001124  0E03               	movlw	3
   337  001126  6E0D               	movwf	??_main+12,c
   338  001128  6A0E               	clrf	??_main+13,c
   339  00112A                     l173:
   340                           ; BSR set to: ?
   341                           ;NeoPixel0.c: 115: NeoPixel_Display(0,0,0);
   342  00112A  0E00               	movlw	0
   343  00112C  6A21               	clrf	?_NeoPixel_Display+1,c
   344  00112E  6A20               	clrf	?_NeoPixel_Display,c
   345  001130  EC7F  F009         	call	_NeoPixel_Display
   346  001134  4A0D               	infsnz	??_main+12,f,c
   347  001136  2A0E               	incf	??_main+13,f,c
   348  001138  500E               	movf	??_main+13,w,c
   349  00113A  0A80               	xorlw	128
   350  00113C  0F80               	addlw	-128
   351  00113E  0E08               	movlw	8
   352  001140  B4D8               	btfsc	status,2,c
   353  001142  5C0D               	subwf	??_main+12,w,c
   354  001144  E3F2               	bnc	l173
   355                           ; BSR set to: ?
   356  001146                     l169:
   357                           ; BSR set to: ?
   358                           ;NeoPixel0.c: 116: }
   359                           ;NeoPixel0.c: 117: }
   360                           ;NeoPixel0.c: 118: if(RB3==1){
   361  001146  A681               	btfss	3969,3,c	;volatile
   362  001148  D021               	goto	l176
   363                           ;NeoPixel0.c: 119: for(int i=0;i<4;i++){
   364  00114A  6A0F               	clrf	??_main+14,c
   365  00114C  6A10               	clrf	??_main+15,c
   366  00114E                     l177:
   367                           ; BSR set to: ?
   368                           ;NeoPixel0.c: 120: NeoPixel_Display(255,255,255)
      +                          ;
   369  00114E  0EFF               	movlw	255
   370  001150  6821               	setf	?_NeoPixel_Display+1,c
   371  001152  6820               	setf	?_NeoPixel_Display,c
   372  001154  EC7F  F009         	call	_NeoPixel_Display
   373  001158  4A0F               	infsnz	??_main+14,f,c
   374  00115A  2A10               	incf	??_main+15,f,c
   375  00115C  5010               	movf	??_main+15,w,c
   376  00115E  0A80               	xorlw	128
   377  001160  0F80               	addlw	-128
   378  001162  0E04               	movlw	4
   379  001164  B4D8               	btfsc	status,2,c
   380  001166  5C0F               	subwf	??_main+14,w,c
   381  001168  E3F2               	bnc	l177
   382                           ; BSR set to: ?
   383                           ;NeoPixel0.c: 121: }
   384                           ;NeoPixel0.c: 122: for(int i=4;i<8;i++){
   385  00116A  0E04               	movlw	4
   386  00116C  6E11               	movwf	??_main+16,c
   387  00116E  6A12               	clrf	??_main+17,c
   388  001170                     l180:
   389                           ; BSR set to: ?
   390                           ;NeoPixel0.c: 123: NeoPixel_Display(0,0,0);
   391  001170  0E00               	movlw	0
   392  001172  6A21               	clrf	?_NeoPixel_Display+1,c
   393  001174  6A20               	clrf	?_NeoPixel_Display,c
   394  001176  EC7F  F009         	call	_NeoPixel_Display
   395  00117A  4A11               	infsnz	??_main+16,f,c
   396  00117C  2A12               	incf	??_main+17,f,c
   397  00117E  5012               	movf	??_main+17,w,c
   398  001180  0A80               	xorlw	128
   399  001182  0F80               	addlw	-128
   400  001184  0E08               	movlw	8
   401  001186  B4D8               	btfsc	status,2,c
   402  001188  5C11               	subwf	??_main+16,w,c
   403  00118A  E3F2               	bnc	l180
   404                           ; BSR set to: ?
   405  00118C                     l176:
   406                           ; BSR set to: ?
   407                           ;NeoPixel0.c: 124: }
   408                           ;NeoPixel0.c: 125: }
   409                           ;NeoPixel0.c: 126: if(RB4==1){
   410  00118C  A881               	btfss	3969,4,c	;volatile
   411  00118E  D021               	goto	l183
   412                           ;NeoPixel0.c: 127: for(int i=0;i<5;i++){
   413  001190  6A13               	clrf	??_main+18,c
   414  001192  6A14               	clrf	??_main+19,c
   415  001194                     l184:
   416                           ; BSR set to: ?
   417                           ;NeoPixel0.c: 128: NeoPixel_Display(255,255,255)
      +                          ;
   418  001194  0EFF               	movlw	255
   419  001196  6821               	setf	?_NeoPixel_Display+1,c
   420  001198  6820               	setf	?_NeoPixel_Display,c
   421  00119A  EC7F  F009         	call	_NeoPixel_Display
   422  00119E  4A13               	infsnz	??_main+18,f,c
   423  0011A0  2A14               	incf	??_main+19,f,c
   424  0011A2  5014               	movf	??_main+19,w,c
   425  0011A4  0A80               	xorlw	128
   426  0011A6  0F80               	addlw	-128
   427  0011A8  0E05               	movlw	5
   428  0011AA  B4D8               	btfsc	status,2,c
   429  0011AC  5C13               	subwf	??_main+18,w,c
   430  0011AE  E3F2               	bnc	l184
   431                           ; BSR set to: ?
   432                           ;NeoPixel0.c: 129: }
   433                           ;NeoPixel0.c: 130: for(int i=5;i<8;i++){
   434  0011B0  0E05               	movlw	5
   435  0011B2  6E15               	movwf	??_main+20,c
   436  0011B4  6A16               	clrf	??_main+21,c
   437  0011B6                     l187:
   438                           ; BSR set to: ?
   439                           ;NeoPixel0.c: 131: NeoPixel_Display(0,0,0);
   440  0011B6  0E00               	movlw	0
   441  0011B8  6A21               	clrf	?_NeoPixel_Display+1,c
   442  0011BA  6A20               	clrf	?_NeoPixel_Display,c
   443  0011BC  EC7F  F009         	call	_NeoPixel_Display
   444  0011C0  4A15               	infsnz	??_main+20,f,c
   445  0011C2  2A16               	incf	??_main+21,f,c
   446  0011C4  5016               	movf	??_main+21,w,c
   447  0011C6  0A80               	xorlw	128
   448  0011C8  0F80               	addlw	-128
   449  0011CA  0E08               	movlw	8
   450  0011CC  B4D8               	btfsc	status,2,c
   451  0011CE  5C15               	subwf	??_main+20,w,c
   452  0011D0  E3F2               	bnc	l187
   453                           ; BSR set to: ?
   454  0011D2                     l183:
   455                           ; BSR set to: ?
   456                           ;NeoPixel0.c: 132: }
   457                           ;NeoPixel0.c: 133: }
   458                           ;NeoPixel0.c: 134: if(RB5==1){
   459  0011D2  AA81               	btfss	3969,5,c	;volatile
   460  0011D4  D021               	goto	l190
   461                           ;NeoPixel0.c: 135: for(int i=0;i<6;i++){
   462  0011D6  6A17               	clrf	??_main+22,c
   463  0011D8  6A18               	clrf	??_main+23,c
   464  0011DA                     l191:
   465                           ; BSR set to: ?
   466                           ;NeoPixel0.c: 136: NeoPixel_Display(255,255,255)
      +                          ;
   467  0011DA  0EFF               	movlw	255
   468  0011DC  6821               	setf	?_NeoPixel_Display+1,c
   469  0011DE  6820               	setf	?_NeoPixel_Display,c
   470  0011E0  EC7F  F009         	call	_NeoPixel_Display
   471  0011E4  4A17               	infsnz	??_main+22,f,c
   472  0011E6  2A18               	incf	??_main+23,f,c
   473  0011E8  5018               	movf	??_main+23,w,c
   474  0011EA  0A80               	xorlw	128
   475  0011EC  0F80               	addlw	-128
   476  0011EE  0E06               	movlw	6
   477  0011F0  B4D8               	btfsc	status,2,c
   478  0011F2  5C17               	subwf	??_main+22,w,c
   479  0011F4  E3F2               	bnc	l191
   480                           ; BSR set to: ?
   481                           ;NeoPixel0.c: 137: }
   482                           ;NeoPixel0.c: 138: for(int i=6;i<8;i++){
   483  0011F6  0E06               	movlw	6
   484  0011F8  6EF3               	movwf	prodl,c
   485  0011FA  6AF4               	clrf	prodh,c
   486  0011FC                     l194:
   487                           ; BSR set to: ?
   488                           ;NeoPixel0.c: 139: NeoPixel_Display(0,0,0);
   489  0011FC  0E00               	movlw	0
   490  0011FE  6A21               	clrf	?_NeoPixel_Display+1,c
   491  001200  6A20               	clrf	?_NeoPixel_Display,c
   492  001202  EC7F  F009         	call	_NeoPixel_Display
   493  001206  4AF3               	infsnz	prodl,f,c
   494  001208  2AF4               	incf	prodh,f,c
   495  00120A  50F4               	movf	prodh,w,c
   496  00120C  0A80               	xorlw	128
   497  00120E  0F80               	addlw	-128
   498  001210  0E08               	movlw	8
   499  001212  B4D8               	btfsc	status,2,c
   500  001214  5CF3               	subwf	prodl,w,c
   501  001216  E3F2               	bnc	l194
   502                           ; BSR set to: ?
   503  001218                     l190:
   504                           ; BSR set to: ?
   505                           ;NeoPixel0.c: 140: }
   506                           ;NeoPixel0.c: 141: }
   507                           ;NeoPixel0.c: 142: if(RB6==1){
   508  001218  AC81               	btfss	3969,6,c	;volatile
   509  00121A  D021               	goto	l197
   510                           ;NeoPixel0.c: 143: for(int i=0;i<7;i++){
   511  00121C  6A19               	clrf	??_main+24,c
   512  00121E  6A1A               	clrf	??_main+25,c
   513  001220                     l198:
   514                           ; BSR set to: ?
   515                           ;NeoPixel0.c: 144: NeoPixel_Display(255,255,255)
      +                          ;
   516  001220  0EFF               	movlw	255
   517  001222  6821               	setf	?_NeoPixel_Display+1,c
   518  001224  6820               	setf	?_NeoPixel_Display,c
   519  001226  EC7F  F009         	call	_NeoPixel_Display
   520  00122A  4A19               	infsnz	??_main+24,f,c
   521  00122C  2A1A               	incf	??_main+25,f,c
   522  00122E  501A               	movf	??_main+25,w,c
   523  001230  0A80               	xorlw	128
   524  001232  0F80               	addlw	-128
   525  001234  0E07               	movlw	7
   526  001236  B4D8               	btfsc	status,2,c
   527  001238  5C19               	subwf	??_main+24,w,c
   528  00123A  E3F2               	bnc	l198
   529                           ; BSR set to: ?
   530                           ;NeoPixel0.c: 145: }
   531                           ;NeoPixel0.c: 146: for(int i=7;i<8;i++){
   532  00123C  0E07               	movlw	7
   533  00123E  6E1B               	movwf	??_main+26,c
   534  001240  6A1C               	clrf	??_main+27,c
   535  001242                     l201:
   536                           ; BSR set to: ?
   537                           ;NeoPixel0.c: 147: NeoPixel_Display(0,0,0);
   538  001242  0E00               	movlw	0
   539  001244  6A21               	clrf	?_NeoPixel_Display+1,c
   540  001246  6A20               	clrf	?_NeoPixel_Display,c
   541  001248  EC7F  F009         	call	_NeoPixel_Display
   542  00124C  4A1B               	infsnz	??_main+26,f,c
   543  00124E  2A1C               	incf	??_main+27,f,c
   544  001250  501C               	movf	??_main+27,w,c
   545  001252  0A80               	xorlw	128
   546  001254  0F80               	addlw	-128
   547  001256  0E08               	movlw	8
   548  001258  B4D8               	btfsc	status,2,c
   549  00125A  5C1B               	subwf	??_main+26,w,c
   550  00125C  E3F2               	bnc	l201
   551                           ; BSR set to: ?
   552  00125E                     l197:
   553                           ; BSR set to: ?
   554                           ;NeoPixel0.c: 148: }
   555                           ;NeoPixel0.c: 149: }
   556                           ;NeoPixel0.c: 150: if(RB7==1){
   557  00125E  AE81               	btfss	3969,7,c	;volatile
   558  001260  D010               	goto	l204
   559                           ;NeoPixel0.c: 151: for(int i=0;i<8;i++){
   560  001262  6A1D               	clrf	??_main+28,c
   561  001264  6A1E               	clrf	??_main+29,c
   562  001266                     l205:
   563                           ; BSR set to: ?
   564                           ;NeoPixel0.c: 152: NeoPixel_Display(255,255,255)
      +                          ;
   565  001266  0EFF               	movlw	255
   566  001268  6821               	setf	?_NeoPixel_Display+1,c
   567  00126A  6820               	setf	?_NeoPixel_Display,c
   568  00126C  EC7F  F009         	call	_NeoPixel_Display
   569  001270  4A1D               	infsnz	??_main+28,f,c
   570  001272  2A1E               	incf	??_main+29,f,c
   571  001274  501E               	movf	??_main+29,w,c
   572  001276  0A80               	xorlw	128
   573  001278  0F80               	addlw	-128
   574  00127A  0E08               	movlw	8
   575  00127C  B4D8               	btfsc	status,2,c
   576  00127E  5C1D               	subwf	??_main+28,w,c
   577  001280  E3F2               	bnc	l205
   578                           ; BSR set to: ?
   579  001282                     l204:
   580                           ; BSR set to: ?
   581                           ;NeoPixel0.c: 153: }
   582                           ;NeoPixel0.c: 154: }
   583                           ;NeoPixel0.c: 155: Wait(20);
   584  001282  0E14               	movlw	20
   585  001284  6E20               	movwf	?_Wait,c
   586  001286  0E00               	movlw	0
   587  001288  6A21               	clrf	?_Wait+1,c
   588  00128A  ECC5  F009         	call	_Wait	;wreg free
   589                           ; BSR set to: ?
   590  00128E  D6F2               	goto	l153
   591  001290                     __end_of_main:
   592                           	opt stack 0
   593                           
   594                           	psect	text1
   595                           ; =============== function _main ends ==========
      +                          ==
   596  000000                     
   597                           ;lcd_portd.c: 53: void LCD_Move(unsigned char Ro
      +                          w, unsigned char Col)
   598                           ;lcd_portd.c: 54: {
   599  001290                     _LCD_Move:
   600                           	opt stack 30
   601                           ; BSR set to: ?
   602                           ; LCD_Move@Row loaded to fsr2l
   603  001290  CFE8 FFD9          	movff	wreg,fsr2l
   604                           ;lcd_portd.c: 55: if (Row == 0) LCD_Inst(0x80 + 
      +                          Col);
   605  001294  66D9               	tstfsz	fsr2l,c
   606  001296  D004               	goto	l124
   607  001298  5020               	movf	?_LCD_Move,w,c
   608  00129A  0F80               	addlw	128
   609  00129C  EC99  F009         	call	_LCD_Inst
   610  0012A0                     l124:
   611                           ; BSR set to: ?
   612                           ;lcd_portd.c: 56: if (Row == 1) LCD_Inst(0xC0 + 
      +                          Col);
   613  0012A0  04D9               	decf	fsr2l,w,c
   614  0012A2  E104               	bnz	l125
   615  0012A4  5020               	movf	?_LCD_Move,w,c
   616  0012A6  0FC0               	addlw	192
   617  0012A8  EC99  F009         	call	_LCD_Inst
   618  0012AC                     l125:
   619                           ; BSR set to: ?
   620                           ;lcd_portd.c: 57: if (Row == 2) LCD_Inst(0x94 + 
      +                          Col);
   621  0012AC  50D9               	movf	fsr2l,w,c
   622  0012AE  0A02               	xorlw	2
   623  0012B0  E104               	bnz	l126
   624  0012B2  5020               	movf	?_LCD_Move,w,c
   625  0012B4  0F94               	addlw	148
   626  0012B6  EC99  F009         	call	_LCD_Inst
   627  0012BA                     l126:
   628                           ; BSR set to: ?
   629                           ;lcd_portd.c: 58: if (Row == 3) LCD_Inst(0xD4 + 
      +                          Col);
   630  0012BA  50D9               	movf	fsr2l,w,c
   631  0012BC  0A03               	xorlw	3
   632  0012BE  A4D8               	btfss	status,2,c
   633  0012C0  0012               	return	
   634  0012C2  5020               	movf	?_LCD_Move,w,c
   635  0012C4  0FD4               	addlw	212
   636  0012C6  EF99  F009         	goto	_LCD_Inst
   637                           ; BSR set to: ?
   638                           ;lcd_portd.c: 59: }
   639                           ; BSR set to: ?
   640  0012CA                     __end_of_LCD_Move:
   641                           	opt stack 0
   642                           
   643                           	psect	text2
   644                           ; =============== function _LCD_Move ends ======
      +                          ======
   645  000000                     
   646                           ;lcd_portd.c: 61: void LCD_Write(unsigned char c
      +                          )
   647                           ;lcd_portd.c: 62: {
   648  0013B2                     _LCD_Write:
   649                           	opt stack 30
   650                           ; BSR set to: ?
   651                           ; LCD_Write@c loaded to prodl
   652  0013B2  CFE8 FFF3          	movff	wreg,prodl
   653                           ;lcd_portd.c: 63: RD2 = 1;
   654  0013B6  8483               	bsf	3971,2,c	;volatile
   655                           ;lcd_portd.c: 64: PORTD = (PORTD & 0x0F) | (c & 
      +                          0xF0);
   656  0013B8  CFF3 F020          	movff	prodl,??_LCD_Write
   657  0013BC  0EF0               	movlw	240
   658  0013BE  ECEC  F009         	call	PL3
   659                           ;lcd_portd.c: 65: LCD_Strobe();
   660  0013C2  ECF8  F009         	call	_LCD_Strobe	;wreg free
   661                           ;lcd_portd.c: 66: PORTD = (PORTD & 0x0F) | ((c<<
      +                          4) & 0xF0);
   662  0013C6  CFF3 F020          	movff	prodl,??_LCD_Write
   663  0013CA  3A20               	swapf	??_LCD_Write,f,c
   664  0013CC  0EF0               	movlw	240
   665  0013CE  1620               	andwf	??_LCD_Write,f,c
   666  0013D0  ECEC  F009         	call	PL3
   667                           ;lcd_portd.c: 67: LCD_Strobe();
   668  0013D4  EFF8  F009         	goto	_LCD_Strobe	;wreg free
   669                           ;lcd_portd.c: 69: }
   670                           ; BSR set to: ?
   671  0013D8                     __end_of_LCD_Write:
   672                           	opt stack 0
   673                           
   674                           	psect	text3
   675                           ; =============== function _LCD_Write ends =====
      +                          =======
   676  000000                     
   677                           ;NeoPixel0.c: 20: void NeoPixel_Display(unsigned
      +                           char RED,
   678                           ;NeoPixel0.c: 21: unsigned char GREEN, unsigned 
      +                          char BLUE)
   679                           ;NeoPixel0.c: 22: {
   680  0012FE                     _NeoPixel_Display:
   681                           	opt stack 30
   682                           ; BSR set to: ?
   683                           ; NeoPixel_Display@RED loaded to fsr0l
   684  0012FE  CFE8 FFE9          	movff	wreg,fsr0l
   685  001302  C020  F000         	movff	?_NeoPixel_Display,0
   686  001306  D805               	call	Pixel_8	;#
   687                           ;NeoPixel0.c: 24: PIXEL = RED; asm("  call Pixel
      +                          _8 ");
   688  001308  CFE9 F000          	movff	fsr0l,0
   689  00130C  D802               	call	Pixel_8	;#
   690                           ;NeoPixel0.c: 25: PIXEL = BLUE; asm("  call Pixe
      +                          l_8 ");
   691  00130E  C021  F000         	movff	?_NeoPixel_Display+1,0
   692  001312                     Pixel_8:
   693                           ;#
   694  001312  D806               	call	Pixel_1	;#
   695  001314  D805               	call	Pixel_1	;#
   696  001316  D804               	call	Pixel_1	;#
   697  001318  D803               	call	Pixel_1	;#
   698  00131A  D802               	call	Pixel_1	;#
   699  00131C  D801               	call	Pixel_1	;#
   700  00131E  D800               	call	Pixel_1	;#
   701  001320                     Pixel_1:
   702                           ;#
   703  001320  8083               	bsf	3971,0,c	; PORTD,0 ;#
   704  001322  F000               	nop		;#
   705  001324  AE00               	btfss	0,7,c	;#
   706  001326  9083               	bcf	3971,0,c	;#
   707  001328  4600               	rlncf	0,f,c	;#
   708  00132A  F000               	nop		;#
   709  00132C  F000               	nop		;#
   710  00132E  9083               	bcf	3971,0,c	;#
   711  001330  0012               	return		;#
   712                           ;NeoPixel0.c: 27: asm("    return");
   713                           ;NeoPixel0.c: 54: }
   714                           ; BSR set to: ?
   715  001332                     __end_of_NeoPixel_Display:
   716                           	opt stack 0
   717                           
   718                           	psect	text4
   719                           ; =============== function _NeoPixel_Display end
      +                          s ============
   720  000000                     
   721                           ;NeoPixel0.c: 56: void Wait(unsigned int X)
   722                           ;NeoPixel0.c: 57: {
   723  00138A                     _Wait:
   724                           	opt stack 30
   725                           ; BSR set to: ?
   726                           ;NeoPixel0.c: 58: unsigned int i, j;
   727                           ;NeoPixel0.c: 60: for (i=0; i<X; i++)
   728  00138A  6AF3               	clrf	prodl,c
   729  00138C  6AF4               	clrf	prodh,c
   730  00138E                     l144:
   731                           ; BSR set to: ?
   732  00138E  5020               	movf	?_Wait,w,c
   733  001390  5CF3               	subwf	prodl,w,c
   734  001392  5021               	movf	?_Wait+1,w,c
   735  001394  58F4               	subwfb	prodh,w,c
   736  001396  B0D8               	btfsc	status,0,c
   737  001398  0012               	return	
   738                           ; BSR set to: ?
   739                           ;NeoPixel0.c: 61: for (j=0; j<609; j++);
   740  00139A  6A22               	clrf	??_Wait,c
   741  00139C  6A23               	clrf	??_Wait+1,c
   742  00139E                     l145:
   743                           ; BSR set to: ?
   744  00139E  4A22               	infsnz	??_Wait,f,c
   745  0013A0  2A23               	incf	??_Wait+1,f,c
   746  0013A2  0E61               	movlw	97
   747  0013A4  5C22               	subwf	??_Wait,w,c
   748  0013A6  0E02               	movlw	2
   749  0013A8  5823               	subwfb	??_Wait+1,w,c
   750  0013AA  E3F9               	bnc	l145
   751                           ; BSR set to: ?
   752  0013AC  4AF3               	infsnz	prodl,f,c
   753  0013AE  2AF4               	incf	prodh,f,c
   754  0013B0  D7EE               	goto	l144
   755                           ; BSR set to: ?
   756                           ;NeoPixel0.c: 62: }
   757                           ; BSR set to: ?
   758  0013B2                     __end_of_Wait:
   759                           	opt stack 0
   760                           
   761                           	psect	text5
   762                           ; =============== function _Wait ends ==========
      +                          ==
   763  000000                     
   764                           ;lcd_portd.c: 72: void LCD_Init(void)
   765                           ;lcd_portd.c: 73: {
   766  0012CA                     _LCD_Init:
   767                           	opt stack 30
   768                           ; BSR set to: ?
   769  0012CA  0E01               	movlw	1
   770  0012CC  6E95               	movwf	3989,c	;volatile
   771                           ;lcd_portd.c: 75: RD1 = 0;
   772  0012CE  9283               	bcf	3971,1,c	;volatile
   773                           ;lcd_portd.c: 76: LCD_Inst(0x33);
   774  0012D0  0E33               	movlw	51
   775  0012D2  EC99  F009         	call	_LCD_Inst
   776                           ;lcd_portd.c: 77: LCD_Inst(0x32);
   777  0012D6  0E32               	movlw	50
   778  0012D8  EC99  F009         	call	_LCD_Inst
   779                           ;lcd_portd.c: 78: LCD_Inst(0x28);
   780  0012DC  0E28               	movlw	40
   781  0012DE  EC99  F009         	call	_LCD_Inst
   782                           ;lcd_portd.c: 79: LCD_Inst(0x0E);
   783  0012E2  0E0E               	movlw	14
   784  0012E4  EC99  F009         	call	_LCD_Inst
   785                           ;lcd_portd.c: 80: LCD_Inst(0x01);
   786  0012E8  0E01               	movlw	1
   787  0012EA  EC99  F009         	call	_LCD_Inst
   788                           ;lcd_portd.c: 81: LCD_Inst(0x06);
   789  0012EE  0E06               	movlw	6
   790  0012F0  EC99  F009         	call	_LCD_Inst
   791                           ;lcd_portd.c: 82: Wait_ms(100);
   792  0012F4  0E64               	movlw	100
   793  0012F6  6E22               	movwf	?_Wait_ms,c
   794  0012F8  6A23               	clrf	?_Wait_ms+1,c
   795  0012FA  EFB1  F009         	goto	_Wait_ms	;wreg free
   796                           ;lcd_portd.c: 83: }
   797                           ; BSR set to: ?
   798  0012FE                     __end_of_LCD_Init:
   799                           	opt stack 0
   800                           
   801                           	psect	text6
   802                           ; =============== function _LCD_Init ends ======
      +                          ======
   803  000000                     
   804                           ;lcd_portd.c: 43: void LCD_Inst(unsigned char c)
   805                           ;lcd_portd.c: 44: {
   806  001332                     _LCD_Inst:
   807                           	opt stack 29
   808                           ; BSR set to: ?
   809                           ; LCD_Inst@c loaded to prodl
   810  001332  CFE8 FFF3          	movff	wreg,prodl
   811                           ;lcd_portd.c: 45: RD2 = 0;
   812  001336  9483               	bcf	3971,2,c	;volatile
   813                           ;lcd_portd.c: 46: PORTD = (PORTD & 0x0F) | (c & 
      +                          0xF0);
   814  001338  CFF3 F021          	movff	prodl,??_LCD_Inst
   815  00133C  0EF0               	movlw	240
   816  00133E  ECF2  F009         	call	PL2
   817                           ;lcd_portd.c: 47: LCD_Strobe();
   818  001342  ECF8  F009         	call	_LCD_Strobe	;wreg free
   819                           ;lcd_portd.c: 48: PORTD = (PORTD & 0x0F) | ((c<<
      +                          4) & 0xF0);
   820  001346  CFF3 F021          	movff	prodl,??_LCD_Inst
   821  00134A  3A21               	swapf	??_LCD_Inst,f,c
   822  00134C  0EF0               	movlw	240
   823  00134E  1621               	andwf	??_LCD_Inst,f,c
   824  001350  ECF2  F009         	call	PL2
   825                           ;lcd_portd.c: 49: LCD_Strobe();
   826  001354  ECF8  F009         	call	_LCD_Strobe	;wreg free
   827                           ;lcd_portd.c: 50: Wait_ms(10);
   828  001358  0E0A               	movlw	10
   829  00135A  6E22               	movwf	?_Wait_ms,c
   830  00135C  6A23               	clrf	?_Wait_ms+1,c
   831  00135E  EFB1  F009         	goto	_Wait_ms	;wreg free
   832                           ;lcd_portd.c: 51: }
   833                           ; BSR set to: ?
   834  001362                     __end_of_LCD_Inst:
   835                           	opt stack 0
   836                           
   837                           	psect	text7
   838                           ; =============== function _LCD_Inst ends ======
      +                          ======
   839  000000                     
   840                           ;lcd_portd.c: 15: void Wait_ms(unsigned int X)
   841                           ;lcd_portd.c: 16: {
   842  001362                     _Wait_ms:
   843                           	opt stack 28
   844                           ; BSR set to: ?
   845                           ;lcd_portd.c: 17: unsigned int i, j;
   846                           ;lcd_portd.c: 19: for (i=0; i<X; i++)
   847  001362  6AF3               	clrf	prodl,c
   848  001364  6AF4               	clrf	prodh,c
   849  001366                     l113:
   850                           ; BSR set to: ?
   851  001366  5022               	movf	?_Wait_ms,w,c
   852  001368  5CF3               	subwf	prodl,w,c
   853  00136A  5023               	movf	?_Wait_ms+1,w,c
   854  00136C  58F4               	subwfb	prodh,w,c
   855  00136E  B0D8               	btfsc	status,0,c
   856  001370  0012               	return	
   857                           ; BSR set to: ?
   858                           ;lcd_portd.c: 20: for (j=0; j<617; j++);
   859  001372  6A24               	clrf	??_Wait_ms,c
   860  001374  6A25               	clrf	??_Wait_ms+1,c
   861  001376                     l114:
   862                           ; BSR set to: ?
   863  001376  4A24               	infsnz	??_Wait_ms,f,c
   864  001378  2A25               	incf	??_Wait_ms+1,f,c
   865  00137A  0E69               	movlw	105
   866  00137C  5C24               	subwf	??_Wait_ms,w,c
   867  00137E  0E02               	movlw	2
   868  001380  5825               	subwfb	??_Wait_ms+1,w,c
   869  001382  E3F9               	bnc	l114
   870                           ; BSR set to: ?
   871  001384  4AF3               	infsnz	prodl,f,c
   872  001386  2AF4               	incf	prodh,f,c
   873  001388  D7EE               	goto	l113
   874                           ; BSR set to: ?
   875                           ;lcd_portd.c: 21: }
   876                           ; BSR set to: ?
   877  00138A                     __end_of_Wait_ms:
   878                           	opt stack 0
   879                           
   880                           	psect	text8
   881                           ; =============== function _Wait_ms ends =======
      +                          =====
   882  000000                     
   883                           ;lcd_portd.c: 31: void LCD_Strobe(void)
   884                           ;lcd_portd.c: 32: {
   885  0013F0                     _LCD_Strobe:
   886                           	opt stack 28
   887                           ; BSR set to: ?
   888                           ;lcd_portd.c: 33: RD3 = 0;
   889  0013F0  9683               	bcf	3971,3,c	;volatile
   890                           ;lcd_portd.c: 34: LCD_Pause();
   891  0013F2  EC01  F00A         	call	_LCD_Pause	;wreg free
   892                           ;lcd_portd.c: 35: RD3 = 1;
   893  0013F6  8683               	bsf	3971,3,c	;volatile
   894                           ;lcd_portd.c: 36: LCD_Pause();
   895  0013F8  EC01  F00A         	call	_LCD_Pause	;wreg free
   896                           ;lcd_portd.c: 37: RD3 = 0;
   897  0013FC  9683               	bcf	3971,3,c	;volatile
   898                           ;lcd_portd.c: 38: LCD_Pause();
   899  0013FE  EF01  F00A         	goto	_LCD_Pause	;wreg free
   900                           ;lcd_portd.c: 39: }
   901                           ; BSR set to: ?
   902  001402                     __end_of_LCD_Strobe:
   903                           	opt stack 0
   904                           
   905                           	psect	text9
   906                           ; =============== function _LCD_Strobe ends ====
      +                          ========
   907  000000                     
   908                           ;lcd_portd.c: 24: void LCD_Pause(void)
   909                           ;lcd_portd.c: 25: {
   910  001402                     _LCD_Pause:
   911                           	opt stack 27
   912                           ; BSR set to: ?
   913  001402  6AE9               	clrf	fsr0l,c
   914  001404                     l118:
   915                           ; BSR set to: ?
   916  001404  2AE9               	incf	fsr0l,f,c
   917  001406  0E13               	movlw	19
   918  001408  64E9               	cpfsgt	fsr0l,c
   919  00140A  D7FC               	goto	l118
   920  00140C  0C13               	retlw	19
   921                           ; BSR set to: ?
   922                           ;lcd_portd.c: 28: }
   923                           ; BSR set to: ?
   924  00140E                     __end_of_LCD_Pause:
   925                           	opt stack 0
   926                           
   927                           	psect	smallconst
   928                           ; =============== function _LCD_Pause ends =====
      +                          =======
   929  001000  00                 	db	0	;reserve
   930  001001                     _MSG0:
   931                           	opt stack 0
   932  001001  4E                 	db	78
   933  001002  65                 	db	101
   934  001003  6F                 	db	111
   935  001004  50                 	db	80
   936  001005  69                 	db	105
   937  001006  78                 	db	120
   938  001007  65                 	db	101
   939  001008  6C                 	db	108
   940  001009  31                 	db	49
   941  00100A  2E                 	db	46
   942  00100B  43                 	db	67
   943  00100C  20                 	db	32
   944  00100D  20                 	db	32
   945  00100E  20                 	db	32
   946  00100F  20                 	db	32
   947  001010  20                 	db	32
   948  001011  20                 	db	32
   949  001012  20                 	db	32
   950  001013  20                 	db	32
   951  001014  20                 	db	32
   952  000000                     
   953  000000                     	;_PIXEL
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                     
   959  000000                     
   960  000000                     
   961  000000                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
   973  000000                     
   974  000000                     
   975  001015  00                 	db	0	; dummy byte at the end
   976                           
   977                           	psect	rparam
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982                           
   983                           	psect	pa_nodes
   984  0013D8                     PL3:
   985  0013D8  1620               	andwf	??_LCD_Write,f,c
   986  0013DA  5083               	movf	3971,w,c	;volatile
   987  0013DC  0B0F               	andlw	15
   988  0013DE  1020               	iorwf	??_LCD_Write,w,c
   989  0013E0  6E83               	movwf	3971,c	;volatile
   990  0013E2  0012               	return	
   991  0013E4                     PL2:
   992  0013E4  1621               	andwf	??_LCD_Inst,f,c
   993  0013E6  5083               	movf	3971,w,c	;volatile
   994  0013E8  0B0F               	andlw	15
   995  0013EA  1021               	iorwf	??_LCD_Inst,w,c
   996  0013EC  6E83               	movwf	3971,c	;volatile
   997  0013EE  0012               	return	
   998                           tblptru	equ	0xFF8
   999                           tblptrh	equ	0xFF7
  1000                           tblptrl	equ	0xFF6
  1001                           tablat	equ	0xFF5
  1002                           prodh	equ	0xFF4
  1003                           prodl	equ	0xFF3
  1004                           fsr0l	equ	0xFE9
  1005                           wreg	equ	0xFE8
  1006                           fsr2l	equ	0xFD9
  1007                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.63PL3 build 4692 
Symbol Table                                           Thu Feb 27 17:45:28 2020

              ?_LCD_Strobe 0022                        l113 1366  
                      l201 1242                        l114 1376  
                      l124 12A0                        l204 1282  
                      l125 12AC                        l205 1266  
                      l118 1404                        l126 12BA  
                      l144 138E                        l145 139E  
                      l153 1074                        l170 1108  
                      l162 1100                        l163 10C2  
                      l155 10BA                        l180 1170  
                      l156 107C                        l173 112A  
                      l149 1040                        l190 1218  
                      l166 10E4                        l191 11DA  
                      l183 11D2                        l159 109E  
                      l184 1194                        l176 118C  
                      l177 114E                        l169 1146  
                      l194 11FC                        l187 11B6  
                      l197 125E                        l198 1220  
                      _RB0 007C08                        _RB1 007C09  
                      _RB2 007C0A                        _RB3 007C0B  
                      _RB4 007C0C                        _RD1 007C19  
                      _RB5 007C0D                        _RD2 007C1A  
                      _RB6 007C0E                        _RD3 007C1B  
                      _RB7 007C0F                        wreg 000FE8  
                     _MSG0 1001                       _Wait 138A  
                     _main 1016                       fsr0l 000FE9  
                     fsr2l 000FD9                       prodl 000FF3  
                     start 0000                LCD_Move@Col 0020  
         __end_of_LCD_Init 12FE           __end_of_LCD_Inst 1362  
         __end_of_LCD_Move 12CA            __end_of_Wait_ms 138A  
                    ?_Wait 0020                      ?_main 0001  
                    _PIXEL 000000                      _PORTB 000F81  
                    _PORTC 000F82                      _PORTD 000F83  
                    _PORTE 000F84                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _TRISE 000F96  
                    Wait@X 0020                      Wait@j 0022  
                    main@i 0001                      tablat 000FF5  
                    status 000FD8               __end_of_Wait 13B2  
             __end_of_main 1290                     ??_Wait 0022  
                   ??_main 0001              __activetblptr 000003  
        __end_of_LCD_Pause 140E          __end_of_LCD_Write 13D8  
                   _ADCON1 000FC1                     _TRISD0 007CA8  
                   __Ldata 000000                     Pixel_1 1320  
                   Pixel_8 1312                  ??_Wait_ms 0024  
             __mediumconst 1016                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0080                  ?_LCD_Init 0020  
                ?_LCD_Inst 0021                  ?_LCD_Move 0020  
         _NeoPixel_Display 12FE               ??_LCD_Strobe 0022  
               ??_LCD_Init 0020                 ??_LCD_Inst 0021  
               ??_LCD_Move 0021         __end_of_LCD_Strobe 1402  
                  __Hparam 0026                    __Lparam 0001  
                  _Wait_ms 1362                    __ramtop 1000  
                _LCD_Pause 1402                  _LCD_Write 13B2  
            __Lmediumconst 1016   __end_of_NeoPixel_Display 1332  
               ?_LCD_Pause 0022                 ?_LCD_Write 0020  
                __Habsbss0 000001                  __Labsbss0 000000  
              ??_LCD_Pause 0022                ??_LCD_Write 0020  
                 ?_Wait_ms 0022                __smallconst 1000  
                 _LCD_Init 12CA                   _LCD_Inst 1332  
                 _LCD_Move 1290      NeoPixel_Display@GREEN 0020  
        ?_NeoPixel_Display 0020         ??_NeoPixel_Display 0022  
                 __Hrparam 0026                   Wait_ms@X 0022  
                 Wait_ms@j 0024                   __Lrparam 0001  
             __Lsmallconst 1000                   main@i_80 0003  
                 main@i_81 0005                   main@i_90 0017  
                 main@i_82 0007                   main@i_83 0009  
                 main@i_92 0019                   main@i_84 000B  
                 main@i_93 001B                   main@i_85 000D  
                 main@i_94 001D                   main@i_86 000F  
                 main@i_87 0011                   main@i_88 0013  
     NeoPixel_Display@BLUE 0021                   main@i_89 0015  
               _LCD_Strobe 13F0  
